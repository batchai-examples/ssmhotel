{
    "has_issue": false,
    "overall_severity": "",
    "issues": [],
    "fixed_code": "package com.bdqn.controller.admin;\n\nimport com.alibaba.fastjson.JSON;\nimport com.bdqn.utils.SystemConstant;\nimport com.bdqn.utils.UUIDUtils;\nimport org.apache.commons.io.FilenameUtils;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.multipart.MultipartFile;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.Map;\n\n@RestController\n@RequestMapping(\"/admin/file\")\npublic class FileController {\n\n    /**\n     * 文件上传\n     * @param file\n     * @return\n     */\n    @RequestMapping(\"/uploadFile\")\n    public String uploadFile(MultipartFile file){\n        //创建Map集合保存返回的JSON数据\n        Map\u003cString,Object\u003e map = new HashMap\u003cString,Object\u003e();\n        //判断是否有选中文件\n        if(!file.isEmpty()){\n            //获取源文件的名称\n            String oldFileName = file.getOriginalFilename();\n            //获取文件的后缀名\n            String extension = FilenameUtils.getExtension(oldFileName);\n            //重命名旧文件\n            String newFileName = UUIDUtils.randomUUID()+\".\"+extension;\n            //为了解决同一个文件夹下文件过多的问题，使用日期作为文件夹管理\n            String datePath = new SimpleDateFormat(\"yyyyMMdd\").format(new Date());\n            //组装最终的文件名\n            String finalName = datePath + \"/\" + newFileName;\n            //创建文件对象\n            //参数1：文件上传的地址  参数2：文件名称\n            File dest = new File(SystemConstant.IMAGE_UPLOAD_PATH,finalName);\n            //判断该文件夹是否存在，不存在则创建文件夹\n            if(!dest.getParentFile().exists()){\n                dest.getParentFile().mkdirs();//创建文件夹\n            }\n\n            try {\n                //进行文件上传\n                file.transferTo(dest);\n                map.put(\"code\",0);//状态码\n                map.put(\"msg\",\"上传成功\");//执行消息\n                Map\u003cString,Object\u003e dataMap = new HashMap\u003cString,Object\u003e();\n                dataMap.put(\"src\",\"/hotel/show/\"+finalName);\n                map.put(\"data\",dataMap);//文件数据\n                map.put(\"imagePath\",finalName);//隐藏域的值，只保留日期文件夹+重命名后的文件名\n\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n\n        }\n        return JSON.toJSONString(map);\n    }\n\n}\n",
    "original_code": "package com.bdqn.controller.admin;\n\nimport com.alibaba.fastjson.JSON;\nimport com.bdqn.utils.SystemConstant;\nimport com.bdqn.utils.UUIDUtils;\nimport org.apache.commons.io.FilenameUtils;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.multipart.MultipartFile;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.Map;\n\n@RestController\n@RequestMapping(\"/admin/file\")\npublic class FileController {\n\n    /**\n     * 文件上传\n     * @param file\n     * @return\n     */\n    @RequestMapping(\"/uploadFile\")\n    public String uploadFile(MultipartFile file){\n        //创建Map集合保存返回的JSON数据\n        Map\u003cString,Object\u003e map = new HashMap\u003cString,Object\u003e();\n        //判断是否有选中文件\n        if(!file.isEmpty()){\n            //获取源文件的名称\n            String oldFileName = file.getOriginalFilename();\n            //获取文件的后缀名\n            String extension = FilenameUtils.getExtension(oldFileName);\n            //重命名旧文件\n            String newFileName = UUIDUtils.randomUUID()+\".\"+extension;\n            //为了解决同一个文件夹下文件过多的问题，使用日期作为文件夹管理\n            String datePath = new SimpleDateFormat(\"yyyyMMdd\").format(new Date());\n            //组装最终的文件名\n            String finalName = datePath + \"/\" + newFileName;\n            //创建文件对象\n            //参数1：文件上传的地址  参数2：文件名称\n            File dest = new File(SystemConstant.IMAGE_UPLOAD_PATH,finalName);\n            //判断该文件夹是否存在，不存在则创建文件夹\n            if(!dest.getParentFile().exists()){\n                dest.getParentFile().mkdirs();//创建文件夹\n            }\n\n            try {\n                //进行文件上传\n                file.transferTo(dest);\n                map.put(\"code\",0);//状态码\n                map.put(\"msg\",\"上传成功\");//执行消息\n                Map\u003cString,Object\u003e dataMap = new HashMap\u003cString,Object\u003e();\n                dataMap.put(\"src\",\"/hotel/show/\"+finalName);\n                map.put(\"data\",dataMap);//文件数据\n                map.put(\"imagePath\",finalName);//隐藏域的值，只保留日期文件夹+重命名后的文件名\n\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n\n        }\n        return JSON.toJSONString(map);\n    }\n\n}\n",
    "path": "src/main/java/com/bdqn/controller/admin/FileController.java",
    "model_usage_metrics": {
        "Duration": 1081501336,
        "OpenAiUsage": {
            "completion_tokens": 0,
            "prompt_tokens": 0,
            "total_tokens": 0,
            "completion_tokens_details": {
                "accepted_prediction_tokens": 0,
                "audio_tokens": 0,
                "reasoning_tokens": 0,
                "rejected_prediction_tokens": 0
            },
            "prompt_tokens_details": {
                "audio_tokens": 0,
                "cached_tokens": 0
            }
        }
    }
}