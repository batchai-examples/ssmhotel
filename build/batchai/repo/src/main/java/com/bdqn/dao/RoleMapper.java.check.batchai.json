{
    "has_issue": false,
    "overall_severity": "",
    "issues": [],
    "fixed_code": "package com.bdqn.dao;\n\nimport com.bdqn.entity.Role;\nimport com.bdqn.vo.RoleVo;\nimport org.apache.ibatis.annotations.Delete;\nimport org.apache.ibatis.annotations.Insert;\nimport org.apache.ibatis.annotations.Param;\n\nimport java.util.List;\nimport java.util.Map;\n\npublic interface RoleMapper {\n\n    /**\n     * 查询角色列表\n     * @param roleVo\n     * @return\n     */\n    List\u003cRole\u003e findRoleList(RoleVo roleVo);\n\n    /**\n     * 添加角色\n     * @param role\n     * @return\n     */\n    int addRole(Role role);\n\n    /**\n     * 修改角色\n     * @param role\n     * @return\n     */\n    int updateRole(Role role);\n\n    /**\n     * 删除角色\n     * @param id\n     * @return\n     */\n    int deleteById(Integer id);\n\n    /**\n     * 删除原有关系\n     * @param roleId\n     */\n    @Delete(\"delete from sys_role_menu where rid = #{roleId}\")\n    void deleteRoleMenu(Integer roleId);\n\n    /**\n     * 添加角色菜单关系数据\n     * @param roleId\n     * @param menuId\n     */\n    @Insert(\"insert into sys_role_menu(mid,rid) values(#{menuId},#{roleId})\")\n    void addRoleMenu(@Param(\"roleId\") Integer roleId,@Param(\"menuId\") String menuId);\n\n    /**\n     * 查询所有角色列表\n     * @return\n     */\n    List\u003cMap\u003cString,Object\u003e\u003e findRoleListByMap();\n\n    /**\n     * 根据员工ID查询该员工拥有的角色列表\n     * @param employeeId\n     * @return\n     */\n    List\u003cInteger\u003e findEmployeeRoleByEmployeeId(Integer employeeId);\n\n}\n",
    "original_code": "package com.bdqn.dao;\n\nimport com.bdqn.entity.Role;\nimport com.bdqn.vo.RoleVo;\nimport org.apache.ibatis.annotations.Delete;\nimport org.apache.ibatis.annotations.Insert;\nimport org.apache.ibatis.annotations.Param;\n\nimport java.util.List;\nimport java.util.Map;\n\npublic interface RoleMapper {\n\n    /**\n     * 查询角色列表\n     * @param roleVo\n     * @return\n     */\n    List\u003cRole\u003e findRoleList(RoleVo roleVo);\n\n    /**\n     * 添加角色\n     * @param role\n     * @return\n     */\n    int addRole(Role role);\n\n    /**\n     * 修改角色\n     * @param role\n     * @return\n     */\n    int updateRole(Role role);\n\n    /**\n     * 删除角色\n     * @param id\n     * @return\n     */\n    int deleteById(Integer id);\n\n    /**\n     * 删除原有关系\n     * @param roleId\n     */\n    @Delete(\"delete from sys_role_menu where rid = #{roleId}\")\n    void deleteRoleMenu(Integer roleId);\n\n    /**\n     * 添加角色菜单关系数据\n     * @param roleId\n     * @param menuId\n     */\n    @Insert(\"insert into sys_role_menu(mid,rid) values(#{menuId},#{roleId})\")\n    void addRoleMenu(@Param(\"roleId\") Integer roleId,@Param(\"menuId\") String menuId);\n\n    /**\n     * 查询所有角色列表\n     * @return\n     */\n    List\u003cMap\u003cString,Object\u003e\u003e findRoleListByMap();\n\n    /**\n     * 根据员工ID查询该员工拥有的角色列表\n     * @param employeeId\n     * @return\n     */\n    List\u003cInteger\u003e findEmployeeRoleByEmployeeId(Integer employeeId);\n\n}\n",
    "path": "src/main/java/com/bdqn/dao/RoleMapper.java",
    "model_usage_metrics": {
        "Duration": 1041286351,
        "OpenAiUsage": {
            "completion_tokens": 0,
            "prompt_tokens": 0,
            "total_tokens": 0,
            "completion_tokens_details": {
                "accepted_prediction_tokens": 0,
                "audio_tokens": 0,
                "reasoning_tokens": 0,
                "rejected_prediction_tokens": 0
            },
            "prompt_tokens_details": {
                "audio_tokens": 0,
                "cached_tokens": 0
            }
        }
    }
}