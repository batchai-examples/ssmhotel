{
    "has_issue": false,
    "overall_severity": "",
    "issues": [],
    "fixed_code": "package com.bdqn.controller.admin;\n\nimport com.alibaba.fastjson.JSON;\nimport com.bdqn.service.ChartsService;\nimport com.bdqn.vo.ChartsVo;\nimport org.springframework.util.StringUtils;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport javax.annotation.Resource;\nimport java.text.SimpleDateFormat;\nimport java.util.*;\n\n@RestController\n@RequestMapping(\"/admin/charts\")\npublic class ChartsController {\n\n    @Resource\n    private ChartsService chartsService;\n\n    /**\n     * 统计每年营业额\n     * @return\n     */\n    @RequestMapping(\"/getHotelYearCharts\")\n    public String getHotelYearCharts(){\n        //创建Map集合保存数据\n        Map\u003cString,Object\u003e dataMap = new HashMap\u003cString,Object\u003e();\n        //调用统计每个年度营业总额的方法\n        List\u003cMap\u003e mapList = chartsService.getTotalPriceByYear();\n        //创建两个List集合，分别保存年份及对应的营业额\n        List\u003cString\u003e keyList = new ArrayList\u003cString\u003e();//年份\n        List\u003cDouble\u003e valueList = new ArrayList\u003cDouble\u003e();//营业额\n        //循环遍历每年营业额集合\n        for (Map map : mapList) {\n            keyList.add(map.get(\"years\").toString());//年份\n            valueList.add(Double.valueOf(map.get(\"totalPrice\").toString()));//金额\n        }\n        dataMap.put(\"keyList\",keyList);\n        dataMap.put(\"valueList\",valueList);\n        //将Map集合以JSON格式返回\n        return JSON.toJSONString(dataMap);\n    }\n\n    /**\n     * 统计月营业额报表\n     * @param year\n     * @return\n     */\n    @RequestMapping(\"/getHotelYearOfMonthCharts\")\n    public String getHotelYearOfMonthCharts(String year){\n        //调用查询每年每月营业额的方法\n        List\u003cDouble\u003e list = chartsService.getTotalPriceByYearOfMonth(year);\n        //循环遍历数据\n        for (int i = 0; i \u003c list.size(); i++) {\n            //判断当前月份是否有数据，如果没有数据则以0代替\n            if(list.get(i)==null){\n                list.set(i,0D);\n            }\n        }\n        //将集合以JSON格式返回\n        return JSON.toJSONString(list);\n    }\n\n\n    /**\n     * 统计季度营业额报表\n     * @param year\n     * @return\n     */\n    @RequestMapping(\"/getHotelQuarterCharts\")\n    public String getHotelQuarterCharts(String year){\n        Map\u003cString,Object\u003e map = new HashMap\u003cString,Object\u003e();\n        //调用根据指定的年份查询季度营业额报表的方法\n        List\u003cMap\u003e listMap = chartsService.getQuarterTotalPriceByYear(year);\n        //创建两个集合，分别保存key和value\n        List\u003cString\u003e keyList = new ArrayList\u003cString\u003e();//保存季度名称\n        List\u003cChartsVo\u003e valueList = new ArrayList\u003cChartsVo\u003e();//保存营业额数据\n        //循环遍历\n        for (Map m : listMap) {\n            //获取每个季度的Key\n            String typeName = m.get(\"typeName\").toString();//季度名称\n            keyList.add(typeName);//将季度名称保存到季度数组中\n            //创建数组，保存每个季度的营业额\n            Double [] dataList = {\n                    Double.valueOf(m.get(\"Q1\").toString()),\n                    Double.valueOf(m.get(\"Q2\").toString()),\n                    Double.valueOf(m.get(\"Q3\").toString()),\n                    Double.valueOf(m.get(\"Q4\").toString())\n            };\n            //创建ChartsVo类保存数据\n            ChartsVo chartsVo = new ChartsVo(typeName,\"line\",\"总营业额\",dataList);\n            //将对象添加到营业额集合\n            valueList.add(chartsVo);\n        }\n        map.put(\"keyList\",keyList);\n        map.put(\"valueList\",valueList);\n        return JSON.toJSONString(map);\n    }\n\n    /**\n     * 统计每个房型每年每月被预订的数量\n     * @param date\n     * @return\n     */\n    @RequestMapping(\"/getHotelChartsByTypeName\")\n    public String getHotelChartsByTypeName(String date){\n        //判断日期是否为空\n        if(StringUtils.isEmpty(date)){\n            //为空则格式化当前日期\n            date = new SimpleDateFormat(\"yyyy-MM\").format(new Date());\n        }\n        return JSON.toJSONString(chartsService.getRoomTypeCountByYearAndMonth(date));\n    }\n\n    /**\n     * 统计当前开房报表\n     * @param date\n     * @return\n     */\n    @RequestMapping(\"/getCurrentDateHotelCharts\")\n    public String getCurrentDateHotelCharts(String date){\n        //判断日期是否为空\n        if(StringUtils.isEmpty(date)){\n            //为空则格式化当前日期\n            date = new SimpleDateFormat(\"yyyy-MM-dd\").format(new Date());\n        }\n        return JSON.toJSONString(chartsService.getCurrentDateHotelByDate(date));\n    }\n\n}\n",
    "original_code": "package com.bdqn.controller.admin;\n\nimport com.alibaba.fastjson.JSON;\nimport com.bdqn.service.ChartsService;\nimport com.bdqn.vo.ChartsVo;\nimport org.springframework.util.StringUtils;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport javax.annotation.Resource;\nimport java.text.SimpleDateFormat;\nimport java.util.*;\n\n@RestController\n@RequestMapping(\"/admin/charts\")\npublic class ChartsController {\n\n    @Resource\n    private ChartsService chartsService;\n\n    /**\n     * 统计每年营业额\n     * @return\n     */\n    @RequestMapping(\"/getHotelYearCharts\")\n    public String getHotelYearCharts(){\n        //创建Map集合保存数据\n        Map\u003cString,Object\u003e dataMap = new HashMap\u003cString,Object\u003e();\n        //调用统计每个年度营业总额的方法\n        List\u003cMap\u003e mapList = chartsService.getTotalPriceByYear();\n        //创建两个List集合，分别保存年份及对应的营业额\n        List\u003cString\u003e keyList = new ArrayList\u003cString\u003e();//年份\n        List\u003cDouble\u003e valueList = new ArrayList\u003cDouble\u003e();//营业额\n        //循环遍历每年营业额集合\n        for (Map map : mapList) {\n            keyList.add(map.get(\"years\").toString());//年份\n            valueList.add(Double.valueOf(map.get(\"totalPrice\").toString()));//金额\n        }\n        dataMap.put(\"keyList\",keyList);\n        dataMap.put(\"valueList\",valueList);\n        //将Map集合以JSON格式返回\n        return JSON.toJSONString(dataMap);\n    }\n\n    /**\n     * 统计月营业额报表\n     * @param year\n     * @return\n     */\n    @RequestMapping(\"/getHotelYearOfMonthCharts\")\n    public String getHotelYearOfMonthCharts(String year){\n        //调用查询每年每月营业额的方法\n        List\u003cDouble\u003e list = chartsService.getTotalPriceByYearOfMonth(year);\n        //循环遍历数据\n        for (int i = 0; i \u003c list.size(); i++) {\n            //判断当前月份是否有数据，如果没有数据则以0代替\n            if(list.get(i)==null){\n                list.set(i,0D);\n            }\n        }\n        //将集合以JSON格式返回\n        return JSON.toJSONString(list);\n    }\n\n\n    /**\n     * 统计季度营业额报表\n     * @param year\n     * @return\n     */\n    @RequestMapping(\"/getHotelQuarterCharts\")\n    public String getHotelQuarterCharts(String year){\n        Map\u003cString,Object\u003e map = new HashMap\u003cString,Object\u003e();\n        //调用根据指定的年份查询季度营业额报表的方法\n        List\u003cMap\u003e listMap = chartsService.getQuarterTotalPriceByYear(year);\n        //创建两个集合，分别保存key和value\n        List\u003cString\u003e keyList = new ArrayList\u003cString\u003e();//保存季度名称\n        List\u003cChartsVo\u003e valueList = new ArrayList\u003cChartsVo\u003e();//保存营业额数据\n        //循环遍历\n        for (Map m : listMap) {\n            //获取每个季度的Key\n            String typeName = m.get(\"typeName\").toString();//季度名称\n            keyList.add(typeName);//将季度名称保存到季度数组中\n            //创建数组，保存每个季度的营业额\n            Double [] dataList = {\n                    Double.valueOf(m.get(\"Q1\").toString()),\n                    Double.valueOf(m.get(\"Q2\").toString()),\n                    Double.valueOf(m.get(\"Q3\").toString()),\n                    Double.valueOf(m.get(\"Q4\").toString())\n            };\n            //创建ChartsVo类保存数据\n            ChartsVo chartsVo = new ChartsVo(typeName,\"line\",\"总营业额\",dataList);\n            //将对象添加到营业额集合\n            valueList.add(chartsVo);\n        }\n        map.put(\"keyList\",keyList);\n        map.put(\"valueList\",valueList);\n        return JSON.toJSONString(map);\n    }\n\n    /**\n     * 统计每个房型每年每月被预订的数量\n     * @param date\n     * @return\n     */\n    @RequestMapping(\"/getHotelChartsByTypeName\")\n    public String getHotelChartsByTypeName(String date){\n        //判断日期是否为空\n        if(StringUtils.isEmpty(date)){\n            //为空则格式化当前日期\n            date = new SimpleDateFormat(\"yyyy-MM\").format(new Date());\n        }\n        return JSON.toJSONString(chartsService.getRoomTypeCountByYearAndMonth(date));\n    }\n\n    /**\n     * 统计当前开房报表\n     * @param date\n     * @return\n     */\n    @RequestMapping(\"/getCurrentDateHotelCharts\")\n    public String getCurrentDateHotelCharts(String date){\n        //判断日期是否为空\n        if(StringUtils.isEmpty(date)){\n            //为空则格式化当前日期\n            date = new SimpleDateFormat(\"yyyy-MM-dd\").format(new Date());\n        }\n        return JSON.toJSONString(chartsService.getCurrentDateHotelByDate(date));\n    }\n\n}\n",
    "path": "src/main/java/com/bdqn/controller/admin/ChartsController.java",
    "model_usage_metrics": {
        "Duration": 1436759847,
        "OpenAiUsage": {
            "completion_tokens": 0,
            "prompt_tokens": 0,
            "total_tokens": 0,
            "completion_tokens_details": {
                "accepted_prediction_tokens": 0,
                "audio_tokens": 0,
                "reasoning_tokens": 0,
                "rejected_prediction_tokens": 0
            },
            "prompt_tokens_details": {
                "audio_tokens": 0,
                "cached_tokens": 0
            }
        }
    }
}