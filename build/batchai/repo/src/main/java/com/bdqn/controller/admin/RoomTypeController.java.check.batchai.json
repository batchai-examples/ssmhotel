{
    "has_issue": false,
    "overall_severity": "",
    "issues": [],
    "fixed_code": "package com.bdqn.controller.admin;\n\nimport com.alibaba.fastjson.JSON;\nimport com.bdqn.entity.RoomType;\nimport com.bdqn.service.RoomTypeService;\nimport com.bdqn.utils.DataGridViewResult;\nimport com.bdqn.utils.SystemConstant;\nimport com.bdqn.vo.RoomTypeVo;\nimport com.github.pagehelper.PageHelper;\nimport com.github.pagehelper.PageInfo;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport javax.annotation.Resource;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@RestController\n@RequestMapping(\"/admin/roomType\")\npublic class RoomTypeController {\n\n    @Resource\n    private RoomTypeService roomTypeService;\n\n    /**\n     * 查询房型列表\n     * @param roomTypeVo\n     * @return\n     */\n    @RequestMapping(\"/list\")\n    public DataGridViewResult list(RoomTypeVo roomTypeVo){\n        //设置分页信息\n        PageHelper.startPage(roomTypeVo.getPage(),roomTypeVo.getLimit());\n        //调用查询的方法\n        List\u003cRoomType\u003e roomTypeList = roomTypeService.findRoomTypeList(roomTypeVo);\n        //创建分页对象\n        PageInfo\u003cRoomType\u003e pageInfo = new PageInfo\u003cRoomType\u003e(roomTypeList);\n        //返回数据\n        return new DataGridViewResult(pageInfo.getTotal(),pageInfo.getList());\n    }\n\n\n\n    /**\n     * 添加房型\n     * @param roomType\n     * @return\n     */\n    @RequestMapping(\"/addRoomType\")\n    public String addRoomType(RoomType roomType){\n        Map\u003cString,Object\u003e map = new HashMap\u003cString,Object\u003e();\n        if(roomTypeService.addRoomType(roomType)\u003e0){\n            map.put(SystemConstant.SUCCESS,true);//成功\n            map.put(SystemConstant.MESSAGE,\"添加成功\");\n        }else{\n            map.put(SystemConstant.SUCCESS,false);//失败\n            map.put(SystemConstant.MESSAGE,\"添加失败\");\n        }\n        return JSON.toJSONString(map);\n    }\n\n\n    /**\n     * 修改房型\n     * @param roomType\n     * @return\n     */\n    @RequestMapping(\"/updateRoomType\")\n    public String updateRoomType(RoomType roomType){\n        Map\u003cString,Object\u003e map = new HashMap\u003cString,Object\u003e();\n        if(roomTypeService.updateRoomType(roomType)\u003e0){\n            map.put(SystemConstant.SUCCESS,true);//成功\n            map.put(SystemConstant.MESSAGE,\"修改成功\");\n        }else{\n            map.put(SystemConstant.SUCCESS,false);//失败\n            map.put(SystemConstant.MESSAGE,\"修改失败\");\n        }\n        return JSON.toJSONString(map);\n    }\n\n    /**\n     * 查询所有房间类型\n     * @return\n     */\n    @RequestMapping(\"/findAll\")\n    public String findAll(){\n        return JSON.toJSONString(roomTypeService.findRoomTypeList(null));\n    }\n\n}\n",
    "original_code": "package com.bdqn.controller.admin;\n\nimport com.alibaba.fastjson.JSON;\nimport com.bdqn.entity.RoomType;\nimport com.bdqn.service.RoomTypeService;\nimport com.bdqn.utils.DataGridViewResult;\nimport com.bdqn.utils.SystemConstant;\nimport com.bdqn.vo.RoomTypeVo;\nimport com.github.pagehelper.PageHelper;\nimport com.github.pagehelper.PageInfo;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport javax.annotation.Resource;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@RestController\n@RequestMapping(\"/admin/roomType\")\npublic class RoomTypeController {\n\n    @Resource\n    private RoomTypeService roomTypeService;\n\n    /**\n     * 查询房型列表\n     * @param roomTypeVo\n     * @return\n     */\n    @RequestMapping(\"/list\")\n    public DataGridViewResult list(RoomTypeVo roomTypeVo){\n        //设置分页信息\n        PageHelper.startPage(roomTypeVo.getPage(),roomTypeVo.getLimit());\n        //调用查询的方法\n        List\u003cRoomType\u003e roomTypeList = roomTypeService.findRoomTypeList(roomTypeVo);\n        //创建分页对象\n        PageInfo\u003cRoomType\u003e pageInfo = new PageInfo\u003cRoomType\u003e(roomTypeList);\n        //返回数据\n        return new DataGridViewResult(pageInfo.getTotal(),pageInfo.getList());\n    }\n\n\n\n    /**\n     * 添加房型\n     * @param roomType\n     * @return\n     */\n    @RequestMapping(\"/addRoomType\")\n    public String addRoomType(RoomType roomType){\n        Map\u003cString,Object\u003e map = new HashMap\u003cString,Object\u003e();\n        if(roomTypeService.addRoomType(roomType)\u003e0){\n            map.put(SystemConstant.SUCCESS,true);//成功\n            map.put(SystemConstant.MESSAGE,\"添加成功\");\n        }else{\n            map.put(SystemConstant.SUCCESS,false);//失败\n            map.put(SystemConstant.MESSAGE,\"添加失败\");\n        }\n        return JSON.toJSONString(map);\n    }\n\n\n    /**\n     * 修改房型\n     * @param roomType\n     * @return\n     */\n    @RequestMapping(\"/updateRoomType\")\n    public String updateRoomType(RoomType roomType){\n        Map\u003cString,Object\u003e map = new HashMap\u003cString,Object\u003e();\n        if(roomTypeService.updateRoomType(roomType)\u003e0){\n            map.put(SystemConstant.SUCCESS,true);//成功\n            map.put(SystemConstant.MESSAGE,\"修改成功\");\n        }else{\n            map.put(SystemConstant.SUCCESS,false);//失败\n            map.put(SystemConstant.MESSAGE,\"修改失败\");\n        }\n        return JSON.toJSONString(map);\n    }\n\n    /**\n     * 查询所有房间类型\n     * @return\n     */\n    @RequestMapping(\"/findAll\")\n    public String findAll(){\n        return JSON.toJSONString(roomTypeService.findRoomTypeList(null));\n    }\n\n}\n",
    "path": "src/main/java/com/bdqn/controller/admin/RoomTypeController.java",
    "model_usage_metrics": {
        "Duration": 1074524002,
        "OpenAiUsage": {
            "completion_tokens": 0,
            "prompt_tokens": 0,
            "total_tokens": 0,
            "completion_tokens_details": {
                "accepted_prediction_tokens": 0,
                "audio_tokens": 0,
                "reasoning_tokens": 0,
                "rejected_prediction_tokens": 0
            },
            "prompt_tokens_details": {
                "audio_tokens": 0,
                "cached_tokens": 0
            }
        }
    }
}